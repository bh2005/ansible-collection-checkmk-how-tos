name: Translate Markdown Files with Free Markdown Translator

on:
  push:
    branches:
      - main # Der Branch, auf dem der Workflow ausgelöst werden soll
    paths:
      - 'DE/**/*.md' # Auslösen, wenn sich .md-Dateien im DE/-Ordner ändern
      - '.github/workflows/translate-markdown.yml' # Auslösen, wenn sich der Workflow selbst ändert

jobs:
  translate:
    runs-on: ubuntu-latest # Wir verwenden einen Ubuntu-Runner für die Ausführung

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Wichtig für das spätere Committen der Übersetzungen

    # Setup Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Verwenden der neuesten Python 3 Version

    - name: Clone Free Markdown Translator Repository
      # Klont das gesamte Free-Markdown-Translator-Repository in einen Unterordner
      run: |
        git clone https://github.com/CrazyMayfly/Free-Markdown-Translator.git translator-repo

    - name: Install Free Markdown Translator Dependencies
      # Installiert die Python-Abhängigkeiten aus der requirements.txt des geklonten Repos
      run: pip install -r translator-repo/requirements.txt

    # Konfigurationsdatei für Free Markdown Translator erstellen
    - name: Create config.yaml for Translator
      # Diese Konfigurationsdatei steuert den Free-Markdown-Translator.
      # Sie wird direkt im 'translator-repo/src/' Ordner erstellt.
      run: |
        cat <<EOF > translator-repo/src/config.yaml
        # Sprache, in die übersetzt werden soll (target_language statt target_langs)
        target_language:
          - en
          - es
        # Der zu verwendende Übersetzer (translator statt translator_engine)
        translator: google # Oder eine andere unterstützte Engine wie 'bing', 'tencent', 'baidu', etc.
        # Festlegen, ob Warnhinweise zu den übersetzten Dokumenten hinzugefügt werden sollen
        insert_warnings: true # (insert_warnings statt insert_warning)
        # Warnmeldung für jede Sprache (warnings_mapping statt warning_message)
        warnings_mapping:
          en: "This document was translated using machine translation and may contain errors. Please review carefully."
          es: "Este documento fue traducido por máquina y puede contener errores. Por favor, revíselo cuidadosamente."
        
        # Optional: Weitere Einstellungen, die im originalen config.yaml Beispiel vorhanden sind.
        # src_filenames:
        #   - '*.md'
        # front_matter_transparent_keys:
        #   - date
        #   - slug
        #   - toc
        #   - image
        #   - comments
        #   - readingTime
        #   - license
        #   - style
        # front_matter_key_value_keys:
        #   - title
        #   - description
        # front_matter_key_value_array_keys:
        #   - tags
        #   - categories
        #   - keywords
        # threads: 4 # Kann Performance verbessern
        # proxy:
        #   enable: false
        # pivot_language: en # Wenn keine direkte Übersetzung verfügbar ist
        EOF

    # Übersetzen der Markdown-Dateien
    - name: Translate Markdown files
      # Wechselt das Arbeitsverzeichnis zum 'src'-Ordner des Translators,
      # dann wird MarkdownTranslator.py mit den Kommandozeilen-Argumenten ausgeführt.
      run: |
        cd translator-repo/src/ # WECHSEL IN DAS ARBEITSVERZEICHNIS
        python MarkdownTranslator.py -f ../../DE/ -o ../../DEV/ # AUSFÜHRUNG MIT ARGUMENTEN

    # Änderungen committen
    - name: Commit translations
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Fügen Sie alle Änderungen im DEV/-Ordner zum Staging hinzu
        git add DEV/
        
        # Prüfen, ob es tatsächlich Änderungen zum Committen gibt
        # (Um leere Commits bei unveränderten Übersetzungen zu vermeiden)
        if ! git diff --cached --exit-code; then
          echo "No changes to commit (translations are up to date)."
        else
          git commit -m "Automated: Translate Markdown files from DE/ to DEV/en and DEV/es using Free-Markdown-Translator (from master)"
          git push
        fi
      env:
        # Der Standard-GITHUB_TOKEN hat die notwendigen Berechtigungen zum Pushen
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
