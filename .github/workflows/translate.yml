name: Translate Markdown with Free-Markdown-Translator

on:
  push:
    branches:
      - main # Adjust this to your default branch (e.g., 'master')
    paths:
      - 'DE/**'          # Trigger if anything changes in the DE folder
      - 'config.yml'     # Trigger if config.yml changes
      - '.github/workflows/translate_docs.yml' # Trigger if the workflow itself changes
  workflow_dispatch: # Allows you to run the workflow manually from GitHub UI

jobs:
  translate:
    runs-on: ubuntu-latest # Uses the latest Ubuntu Linux runner
    permissions:
      contents: write # This grants the default GITHUB_TOKEN permission to push changes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Clones your repository into the runner environment

      - name: Set up Python
        uses: actions/setup-python@v5 # Sets up a Python environment
        with:
          python-version: '3.10' # Specifies the Python version to use

      - name: Upgrade pip and setuptools
        run: |
          python -m pip install --upgrade pip setuptools # Ensures pip is up-to-date

      - name: Clone Free Markdown Translator and Verify Script
        id: clone_translator # Add an ID to this step to check its status later
        run: |
          CLONE_DIR="Free-Markdown-Translator" # Define the name of the directory where the repo will be cloned
          REPO_URL="https://github.com/CrazyMayfly/Free-Markdown-Translator.git"
          SCRIPT_PATH="$CLONE_DIR/markdown_translator.py"

          echo "Attempting to clone $REPO_URL into $CLONE_DIR..."
          git clone "$REPO_URL" "$CLONE_DIR" || { echo "ERROR: Failed to clone repository."; exit 1; }

          echo "Listing contents of cloned directory ($CLONE_DIR) to verify script presence:"
          ls -la "$CLONE_DIR/" || { echo "ERROR: Could not list contents of $CLONE_DIR."; exit 1; }

          if [ -f "$SCRIPT_PATH" ]; then
            echo "Success: markdown_translator.py found at $SCRIPT_PATH."
          else
            echo "ERROR: markdown_translator.py NOT FOUND at $SCRIPT_PATH after cloning."
            echo "Please check the repository structure or if the clone was incomplete."
            exit 1 # Fail this step if the script is not found
          fi
        # If your chosen translator (e.g., Google) requires API keys, you'd configure
        # the 'env:' block below, using GitHub Secrets for security.
        # env:
        #   GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_TRANSLATE_API_KEY_JSON }}
        #   # Make sure 'GOOGLE_TRANSLATE_API_KEY_JSON' is a repository secret
        #   # containing your Google Service Account Key JSON.

      - name: Create output directories for translated files
        run: |
          # Creates the main output directory and subdirectories for each target language
          # These must match 'output_dir' and 'target_langs' in your config.yml
          mkdir -p DEV/en
          mkdir -p DEV/fr
          mkdir -p DEV/sp

      - name: Run translation script directly
        # This step will only run if the previous 'Clone and Verify' step was successful
        run: python Free-Markdown-Translator/markdown_translator.py config.yml
        env:
          PYTHONIOENCODING: utf-8 # Ensures proper handling of Unicode characters

      - name: Commit and push changes
        id: commit_changes # Assigns an ID to this step to reference its outputs later
        run: |
          # Configure Git user for the commit
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions-bot@users.noreply.github.com"

          # Stage all changes within the DEV/ output directory
          git add DEV/

          # Check if there are any actual changes to commit
          if ! git diff --staged --quiet; then
            echo "No changes in translated files detected. Skipping commit."
            echo "pushed_changes=false" >> "$GITHUB_OUTPUT" # Sets output to indicate no push
          else
            echo "Changes detected, committing and pushing..."
            # Commit changes with a message that tells CI to skip running on this commit
            git commit -m "Automated translation: Update DEV folder with EN, FR, SP [skip ci]"
            git push # Push the changes to the 'main' branch
            echo "pushed_changes=true" >> "$GITHUB_OUTPUT" # Sets output to indicate a push
          fi
        # The "[skip ci]" in the commit message is CRITICAL.
        # It prevents this automated push from triggering another workflow run, avoiding an infinite loop.

      - name: Verify successful push
        # This step only runs if 'pushed_changes' output from the previous step is 'true'
        if: steps.commit_changes.outputs.pushed_changes == 'true'
        run: echo "Translation successful and changes pushed to main branch."