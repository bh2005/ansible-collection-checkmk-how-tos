name: Translate Markdown with Hugging Face

on:
  push:
    branches: [main]
    paths:
      - 'DE/**'
      - 'config.yaml' # Stellen Sie sicher, dass dies auf Ihre config.yaml passt
      - '.github/scripts/translate_with_huggingface.py'
      - '.github/workflows/translate.yml'

jobs:
  translate:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Installiere die Hugging Face Transformers Bibliothek
          # UND PyTorch (oder TensorFlow) als Backend.
          # PyTorch ist meistens einfacher zu installieren.
          # 'torch' ist das PyTorch-Paket, 'sentencepiece' ist oft eine Abhängigkeit.
          pip install transformers pyyaml torch sentencepiece

      - name: Create output directories
        run: |
          mkdir -p DEV/en
          mkdir -p DEV/fr
          mkdir -p DEV/es
          # Stellen Sie sicher, dass DE/ existiert, falls es nicht eingecheckt ist
          mkdir -p DE 

      - name: List files in DE (for debug)
        run: ls -l DE/

      - name: Run Hugging Face translation script
        # Stelle sicher, dass die config.yaml im Wurzelverzeichnis des Repos liegt.
        # Falls nicht, muss der Pfad im Python-Skript angepasst werden.
        run: python .github/scripts/translate_with_huggingface.py

      - name: Verify translation output
        run: |
          echo "Inhalt von DEV/en:"
          ls -l DEV/en || true
          echo "Inhalt von DEV/fr:"
          ls -l DEV/fr || true
          echo "Inhalt von DEV/es:"
          ls -l DEV/es || true
          
          # Prüfe, ob mindestens eine Datei im DEV-Ordner gefunden wurde, um Erfolg zu melden
          if [ -z "$(find DEV -maxdepth 2 -type f -name '*.md')" ]; then
            echo "::warning::Keine übersetzten Markdown-Dateien im DEV-Verzeichnis gefunden."
            # Wir wollen hier keinen Fehler werfen, da es manchmal keine zu übersetzenden Dateien gibt.
            # Aber wenn wir hier landen, obwohl Dateien gefunden wurden, ist es ein Problem.
            # Für diesen Debug-Schritt ist ein exit 0 in Ordnung.
            exit 0 
          else
            echo "Übersetzte Dateien gefunden. Der Workflow war erfolgreich."
          fi

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions-bot@users.noreply.github.com"
          git add DEV/
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            echo "Changes detected, committing..."
            git commit -m "Auto-translated (Hugging Face): DE→EN/FR/ES [skip ci]"
            git push
          fi