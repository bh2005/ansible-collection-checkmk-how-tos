name: Translate Markdown with Free-Markdown-Translator

on:
  push:
    branches:
      - main # Or your default branch like 'main'
    paths:
      - 'DE/**'          # Trigger when anything changes in the DE folder
      - 'config.yml'     # Trigger if config.yml changes
      - '.github/workflows/translate_docs.yml' # Trigger if the workflow itself changes
  workflow_dispatch: # Allows manual execution from GitHub UI

jobs:
  translate:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Essential for the workflow to push changes back to the repository

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Using the latest stable version

      - name: Set up Python
        uses: actions/setup-python@v5 # Using the latest stable version
        with:
          python-version: '3.10' # Specify your preferred Python version

      - name: Upgrade pip and setuptools
        run: |
          python -m pip install --upgrade pip setuptools

      - name: Install Free Markdown Translator
        run: |
          git clone https://github.com/CrazyMayfly/Free-Markdown-Translator.git /tmp/Free-Markdown-Translator
          pip install /tmp/Free-Markdown-Translator
        # If your Google Translate usage requires API keys, you'd add them here as env vars:
        # env:
        #   GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_TRANSLATE_API_KEY_JSON }}
        #   # Ensure GOOGLE_TRANSLATE_API_KEY_JSON is a repository secret containing your service account key JSON

      - name: Create output directory for translated files
        # Creates the main DEV directory and its language subdirectories
        run: |
          mkdir -p DEV/en
          mkdir -p DEV/fr
          mkdir -p DEV/sp
          # Make sure these match your target_langs in config.yml

      - name: Run translation
        run: python -m markdown_translator config.yml
        env:
          PYTHONIOENCODING: utf-8 # Ensures correct handling of Unicode characters

      - name: Commit and push changes
        id: commit_changes # Assign an ID to this step to reference its outputs later
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions-bot@users.noreply.github.com"

          # Add the main output directory for all translated files
          git add DEV/

          # Check if there are any changes staged for commit
          if ! git diff --staged --quiet; then
            echo "No changes in translated files detected. Skipping commit."
            echo "pushed_changes=false" >> "$GITHUB_OUTPUT" # Set output to indicate no push
          else
            echo "Changes detected, committing and pushing..."
            git commit -m "Automated translation: Update DEV folder with EN, FR, SP [skip ci]"
            git push
            echo "pushed_changes=true" >> "$GITHUB_OUTPUT" # Set output to indicate a push
          fi
        # The "[skip ci]" in the commit message is CRITICAL.
        # It prevents this automated push from triggering another workflow run, avoiding an infinite loop.

      - name: Verify successful push
        if: steps.commit_changes.outputs.pushed_changes == 'true'
        run: echo "Translation successful and changes pushed to main branch."