name: Translate Markdown Files with Free Markdown Translator

on:
  push:
    branches:
      - main # Der Branch, auf dem der Workflow ausgelöst werden soll
    paths:
      - 'DE/**/*.md' # Auslösen, wenn sich .md-Dateien im DE/-Ordner ändern
      - '.github/workflows/translate-markdown.yml' # Auslösen, wenn sich der Workflow selbst ändert

jobs:
  translate:
    runs-on: ubuntu-latest # Wir verwenden einen Ubuntu-Runner für die Ausführung

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Wichtig für das spätere Committen der Übersetzungen

    # Setup Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Verwenden der neuesten Python 3 Version

    - name: Download Free Markdown Translator Release
      # Lädt das V1.2 Release ZIP von GitHub herunter
      run: |
        curl -L https://github.com/CrazyMayfly/Free-Markdown-Translator/releases/download/V1.2/MarkdownTranslator_V1.2.zip -o MarkdownTranslator.zip

    - name: Unzip Translator
      # Entpackt das heruntergeladene ZIP in einen dedizierten Ordner
      run: |
        unzip MarkdownTranslator.zip -d translator-release

    - name: Install Free Markdown Translator Dependencies
      # Installiert die Python-Abhängigkeiten aus dem entpackten src-Ordner
      run: pip install -r translator-release/src/requirements.txt

    # Konfigurationsdatei für Free Markdown Translator erstellen
    - name: Create config.yaml
      # Diese Konfigurationsdatei steuert den Free-Markdown-Translator
      # Sie bleibt im Root Ihres Repositorys
      run: |
        cat <<EOF > config.yaml
        src_language: de
        target_langs:
          - en
          - es
        src_dir: DE/ # Der Ordner, der die Quelldateien enthält (relativ zum Repo-Root)
        output_dir: DEV/ # Der Zielordner (relativ zum Repo-Root). Der Translator erstellt hier die Unterordner für Sprachen (DEV/en, DEV/es).
        translator_engine: google # Oder eine andere unterstützte Engine wie 'bing', 'tencent', 'baidu', etc.
        insert_warning: true
        warning_message: "This document was translated using machine translation and may contain errors. Please review carefully."
        
        # Optional: Weitere Einstellungen können hier hinzugefügt werden, falls benötigt.
        # Beispiel für Front-Matter-Behandlung, wie im originalen config.yaml des Translators.
        # Beachten Sie, dass die Schlüssel ohne Doppelpunkt geschrieben werden.
        # front_matter_transparent_keys:
        #   - date
        #   - slug
        #   - toc
        #   - image
        #   - comments
        #   - readingTime
        #   - license
        #   - style
        # front_matter_key_value_keys:
        #   - title
        #   - description
        # front_matter_key_value_array_keys:
        #   - tags
        #   - categories
        #   - keywords
        EOF

    # Übersetzen der Markdown-Dateien
    - name: Translate Markdown files
      # Der Translator liest die Pfade aus der config.yaml (im Repo-Root)
      # und verarbeitet alle Dateien im src_dir.
      # Wir rufen main.py aus dem entpackten Verzeichnis auf.
      run: python translator-release/src/main.py

    # Änderungen committen
    - name: Commit translations
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Fügen Sie alle Änderungen im DEV/-Ordner zum Staging hinzu
        git add DEV/
        
        # Prüfen, ob es tatsächlich Änderungen zum Committen gibt
        # (Um leere Commits bei unveränderten Übersetzungen zu vermeiden)
        if ! git diff --cached --exit-code; then
          echo "No changes to commit (translations are up to date)."
        else
          git commit -m "Automated: Translate Markdown files from DE/ to DEV/en and DEV/es using Free-Markdown-Translator V1.2"
          git push
        fi
      env:
        # Der Standard-GITHUB_TOKEN hat die notwendigen Berechtigungen zum Pushen
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
